<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation=
               "http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
             http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
             http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">


    <security:http use-expressions="true">
        <security:intercept-url pattern="/home" access="permitAll"/>
        <security:intercept-url pattern="/css/**" access="permitAll"/>
        <security:intercept-url pattern="/js/**" access="permitAll"/>
        <security:intercept-url pattern="/topmenu" access="permitAll"/>
        <security:intercept-url pattern="/error/**" access="permitAll"/>
        <security:intercept-url pattern="/database/fill" access="permitAll"/>
        <security:intercept-url pattern="/" access="permitAll"/>
        <security:intercept-url pattern="/fbloginpage" access="permitAll"/>

        <security:intercept-url pattern="/login" access="permitAll"/>
        <security:intercept-url pattern="/login/**" access="permitAll"/>

        <security:intercept-url pattern="/profile/register" access="permitAll"/>
        <security:intercept-url pattern="/profile/reset/**" access="permitAll"/>
        <security:intercept-url pattern="/profile/create" access="permitAll"/>
        <security:intercept-url pattern="/profile/fblogin" access="permitAll"/>

        <security:intercept-url pattern="/android/**" access="permitAll"/>
        <security:intercept-url pattern="/**" access="isAuthenticated()"/>
        <security:form-login login-page="/login" authentication-failure-url="/login/incorrect"
                             authentication-success-handler-ref="successHandler"/>
        <security:logout logout-success-url="/login"/>
    </security:http>

    <bean id="daoAuthenticationProvider"
          class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="userDetailsService"/>
    </bean>

    <bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
        <property name="providers">
            <list>
                <ref local="daoAuthenticationProvider"/>
            </list>
        </property>
    </bean>

    <bean id="encoder" class="be.kdg.groepi.security.StandardPasswordEncoder"/>

    <bean id="successHandler" class="be.kdg.groepi.security.MyAuthenticationSuccessHandler"/>

    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userDetailsService">
            <security:password-encoder ref="encoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <context:component-scan base-package="be.kdg.groepi"/>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://mysql.vincentverbist.be:3306/trippidb"/>
        <property name="username" value="groepi_user"/>
        <property name="password" value="groepi_pass"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="persistenceUnit"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="MYSQL"/>
                <property name="showSql" value="true"/>
                <property name="generateDdl" value="true"/>
            </bean>
        </property>
        <property name="packagesToScan" value="be.kdg.groepi"/>
    </bean>

    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->

</beans>